{"version":3,"sources":["BeersTable.js","App.js","serviceWorker.js","index.js"],"names":["Column","Table","expandedRowRender","_ref","name","description","ebc","srm","attenuation_level","brewers_tips","react_default","a","createElement","descriptions","title","Item","label","span","BeersTable","_ref2","beers","loading","className","table","dataSource","rowKey","dataIndex","key","render","_ref3","tagline","image_url","style","backgroundImage","concat","abv","ibu","progress","percent","size","format","x","strokeColor","width","ph","_ref4","slider","range","disabled","defaultValue","min","max","marks","0","Object","defineProperty","tooltipVisible","food_pairing","map","food","tag","color","Header","Layout","Footer","App","_useState","useState","_useState2","slicedToArray","setBeers","_useState3","_useState4","setLoading","_useState5","_useState6","search","setSearch","_useState7","_useState8","abvGreaterThan7","toggleAbvGreaterThan7","useEffect","fetch","then","res","json","beersFiltered","useMemo","filter","toLowerCase","includes","length","input","placeholder","value","onChange","e","target","type","es_switch","src_BeersTable","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f312c65c.chunk.js","sourcesContent":["import React from 'react';\nimport { Table, Descriptions, Tag, Progress, Slider } from 'antd';\n\nconst { Column } = Table;\n\nfunction expandedRowRender({ name, description, ebc, srm, attenuation_level, brewers_tips }) {\n  return (\n    <Descriptions title={name}>\n      <Descriptions.Item label=\"Description\" span={3}>\n        {description}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"Tips\" span={3}>\n        {brewers_tips}\n      </Descriptions.Item>\n      <Descriptions.Item label=\"Attenuation level\">{attenuation_level}</Descriptions.Item>\n      <Descriptions.Item label=\"European Brewery Convention\">{ebc}</Descriptions.Item>\n      <Descriptions.Item label=\"Standard Reference Method\">{srm}</Descriptions.Item>\n    </Descriptions>\n  );\n}\n\nfunction BeersTable({ beers, loading }) {\n  return (\n    <div className=\"BeersTable\">\n      <Table dataSource={beers} loading={loading} expandedRowRender={expandedRowRender} rowKey=\"id\">\n        <Column\n          title=\"Beer\"\n          dataIndex=\"name\"\n          key=\"name\"\n          render={(name, { tagline, image_url }) => (\n            <div className=\"BeersTable__media\">\n              <div\n                className=\"BeersTable__media-image\"\n                style={{ backgroundImage: `url(${image_url})` }}\n              />\n              <div className=\"BeersTable__media-content\">\n                <div className=\"BeersTable__media-title\">{name}</div>\n                <div className=\"BeersTable__media-subtitle\">{tagline}</div>\n              </div>\n            </div>\n          )}\n        />\n        <Column title=\"% Alcool\" dataIndex=\"abv\" key=\"abv\" render={abv => `${abv}%`} />\n        <Column\n          title=\"Bitterness\"\n          dataIndex=\"ibu\"\n          key=\"ibu\"\n          render={ibu =>\n            !!ibu && <Progress percent={ibu} size=\"small\" format={x => x} strokeColor=\"#BBB\" />\n          }\n        />\n        <Column title=\"First brewed\" dataIndex=\"first_brewed\" key=\"first_brewed\" />\n\n        <Column\n          title=\"PH\"\n          dataIndex=\"ph\"\n          key=\"ph\"\n          width={120}\n          render={ph => (\n            <Slider\n              range\n              disabled\n              defaultValue={[ph, ph]}\n              min={0}\n              max={14}\n              marks={{ 0: '0', [ph]: ph, 14: '14' }}\n              tooltipVisible={false}\n            />\n          )}\n        />\n\n        <Column\n          title=\"Food pairing\"\n          dataIndex=\"food_pairing\"\n          key=\"food_pairing\"\n          render={food_pairing => (\n            <span>\n              {food_pairing.map(food => (\n                <Tag color=\"blue\" key={food}>\n                  {food}\n                </Tag>\n              ))}\n            </span>\n          )}\n        />\n      </Table>\n    </div>\n  );\n}\n\nexport default BeersTable;\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Layout, Input, Switch } from 'antd';\nimport 'antd/dist/antd.css';\n\nimport BeersTable from './BeersTable';\nimport './index.css';\n\nconst { Header, Footer } = Layout;\n\nfunction App() {\n  const [beers, setBeers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [search, setSearch] = useState('');\n  const [abvGreaterThan7, toggleAbvGreaterThan7] = useState(false);\n\n  useEffect(() => {\n    fetch('https://api.punkapi.com/v2/beers?malt=extra_pale')\n      .then(res => res.json())\n      .then(setBeers)\n      .then(() => setLoading(false));\n  }, []);\n\n  const beersFiltered = useMemo(\n    () =>\n      beers\n        .filter(({ name }) => !search || name.toLowerCase().includes(search.toLowerCase()))\n        .filter(({ abv }) => !abvGreaterThan7 || abv > 7),\n    [beers, search, abvGreaterThan7]\n  );\n\n  return (\n    <div className=\"App\">\n      <Header className=\"App__header\">\n        <div className=\"App__logo\">{beersFiltered.length} Beers</div>\n        <Input\n          className=\"App__search\"\n          size=\"large\"\n          placeholder=\"Search a beer...\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n          type=\"search\"\n        />\n      </Header>\n      <div className=\"App__main\">\n        <div className=\"App__abv-switch\">\n          <Switch value={abvGreaterThan7} onChange={x => toggleAbvGreaterThan7(x)} />\n          <span className=\"App__abv-switch-label \">Show only beer with more than 7% of ABV</span>\n        </div>\n        <BeersTable beers={beersFiltered} loading={loading} />\n        <Footer className=\"App__footer\">Renaud Tertrais Â©2019</Footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}